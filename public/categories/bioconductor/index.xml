<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bioconductor on Chatomics</title>
    <link>/categories/bioconductor/</link>
    <description>Recent content in Bioconductor on Chatomics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Ming &#39;Tommy&#39; Tang</copyright>
    <lastBuildDate>Sat, 21 Sep 2024 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/bioconductor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>You need to master it if you deal with genomics data</title>
      <link>/post/genomic-interval/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/post/genomic-interval/</guid>
      <description>To not miss a post like this, sign up for my newsletter to learn computational biology and bioinformatics.
Motivation What’s the most common problem you need to solve when dealing with genomics data?
For me, it is Genomic Intervals!
The genomics data usually represents linearly: chromosome name, start and end.
We use it to define a region in the genome ( A peak from ChIP-seq data); the location of a gene, a DNA methylation site ( a single point), a mutation call (a single point), and a duplication region in cancer etc.</description>
    </item>
    
    <item>
      <title>R or Python for Bioinformatics?</title>
      <link>/post/r-or-python-for-bioinformatics/</link>
      <pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/post/r-or-python-for-bioinformatics/</guid>
      <description>To not miss a post like this, sign up for my newsletter to learn computational biology and bioinformatics.
R or Python for Bioinformatics? Watch the video here:
    If you need to pick Python or R for bioinformatics, which one should you choose? This is a decades-old question from many beginners.
This is my story.
I started learning Unix Commands 12 years ago (See an example of how powerful Unix commands can be).</description>
    </item>
    
    <item>
      <title>Fine tune the best clustering resolution for scRNAseq data: trying out callback</title>
      <link>/post/fine-tune-the-best-clustering-resolution-for-scrnaseq-data-trying-out-callback/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/post/fine-tune-the-best-clustering-resolution-for-scrnaseq-data-trying-out-callback/</guid>
      <description>Context and Problem In scRNA-seq, each cell is sequenced individually, allowing for the analysis of gene expression at the single-cell level. This provides a wealth of information about the cellular identities and states. However, the high dimensionality of the data (thousands of genes) and the technical noise in the data can lead to challenges in accurately clustering the cells. Over-clustering is one such challenge, where cells that are biologically similar are clustered into distinct clusters.</description>
    </item>
    
    <item>
      <title>Downstream of bulk RNAseq: read in salmon output using tximport and then DESeq2</title>
      <link>/post/downstream-of-bulk-rnaseq-read-in-salmon-output-using-tximport-and-then-deseq2/</link>
      <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/post/downstream-of-bulk-rnaseq-read-in-salmon-output-using-tximport-and-then-deseq2/</guid>
      <description>Join my newsletter to not miss a post like this
In the last blog post, I showed you how to use salmon to get counts from fastq files downloaded from GEO. In this post, I am going to show you how to read in the .sf salmon quantification file into R; how to get the tx2gene.txt file and do DESeq2 for differential gene expression analysis. Let’s dive in!
library(tximport) library(dplyr) library(ggplot2) files&amp;lt;- list.</description>
    </item>
    
    <item>
      <title>How to make a multi-group dotplot for single-cell RNAseq data</title>
      <link>/post/how-to-make-a-multi-group-dotplot-for-single-cell-rnaseq-data/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-make-a-multi-group-dotplot-for-single-cell-rnaseq-data/</guid>
      <description>Dotplots are very popular for visualizing single-cell RNAseq data. In essence, the dot size represents the percentage of cells that are positive for that gene; the color intensity represents the average gene expression of that gene in a cell type.
It is easy to plot one using Seurat::dotplot or Sccustomize::clustered_dotplot. However, when you have multiple groups/conditions in your data and you want to visualize it by groups, it is not that straightforward.</description>
    </item>
    
    <item>
      <title>Part 2 CITE-seq downstream analysis: From Alevin output to Seurat visualization</title>
      <link>/post/cite-seq-downstream-analysis-from-alevin-output-to-seurat-visualization/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/cite-seq-downstream-analysis-from-alevin-output-to-seurat-visualization/</guid>
      <description>In my last post, I showed you how to get the protein and RNA counts from a CITE-seq experiment using Simpleaf.
Now that we have the raw count matrices, we are ready to explore them within R.
To follow the tutorial, you can download the associated data from here.
Load the data suppressPackageStartupMessages({ library(fishpond) library(ggplot2) library(dplyr) library(SingleCellExperiment) library(Seurat) library(DropletUtils) }) # set the seed set.seed(123) #gex_q &amp;lt;- loadFry(&amp;#39;~/blog_data/CITEseq/alevin_rna/af_quant&amp;#39;) #fb_q &amp;lt;- loadFry( &amp;#39;~/blog_data/CITEseq/alevin_adt/af_quant&amp;#39;) # I saved the above objs first to rds files, now just read them back fb_q&amp;lt;- readRDS(&amp;quot;~/blog_data/CITEseq/fb_q.</description>
    </item>
    
    <item>
      <title>How to convert raw counts to TPM for TCGA data and make a heatmap across cancer types</title>
      <link>/post/how-to-convert-raw-counts-to-tpm-for-tcga-data-and-make-a-heatmap-across-cancer-types/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-convert-raw-counts-to-tpm-for-tcga-data-and-make-a-heatmap-across-cancer-types/</guid>
      <description>Sign up for my newsletter to not miss a post like this https://divingintogeneticsandgenomics.ck.page/newsletter
The Cancer Genome Atlas (TCGA) project is probably one of the most well-known large-scale cancer sequencing project. It sequenced ~10,000 treatment-naive tumors across 33 cancer types. Different data including whole-exome, whole-genome, copy-number (SNP array), bulk RNAseq, protein expression (Reverse-Phase Protein Array), DNA methylation are available.
TCGA is a very successful large sequencing project. I highly recommend learning from the organization of it.</description>
    </item>
    
  </channel>
</rss>